Tuples
1.1 Unpacking a Tuple
You are given a tuple with three values (name, age, and city). Unpack the values into separate variables and print them.

person = ("Alice", 25, "New York")
# Unpack the tuple into separate variables
name, age, city = _____
print(f"Name: {name}, Age: {age}, City: {city}")
--------------------------------------------------

1.2. Swapping Values Using Tuples
You are given two variables a and b. Swap their values using a tuple without using a temporary variable.

a = 10
b = 20
# Swap the values of a and b using a tuple
a, b = _____
print(f"a: {a}, b: {b}")
--------------------------------------------------

1.3. Return Multiple Values from a Function
Write a function that takes two numbers as input and returns both their sum and product as a tuple.

def calculate_sum_and_product(x, y):
    # Return the sum and product as a tuple
    return _____

# Test the function
result = calculate_sum_and_product(3, 5)
print(f"Sum: {result[0]}, Product: {result[1]}")
--------------------------------------------------

1.4. Accessing Elements in a Tuple
You are given a tuple of five numbers. Access and print the first, third, and last elements of the tuple.

numbers = (10, 20, 30, 40, 50)
# Access and print the first, third, and last elements
first = _____
third = _____
last = _____
print(f"First: {first}, Third: {third}, Last: {last}")
--------------------------------------------------

1.5. Tuple of Tuples
You are given a tuple of tuples, where each inner tuple contains the name of a student and their grade. Write code to extract and print all student names along with their grades.

students = (("Alice", 90), ("Bob", 85), ("Charlie", 95))
# Loop through the tuple of tuples and print each student's name and grade
for student in students:
    name = _____
    grade = _____
    print(f"{name} scored {grade}")
--------------------------------------------------
--------------------------------------------------

Sets
2.1. Remove Duplicates from a List
You are given a list with some duplicate numbers. Use a set to remove the duplicates and print the unique values.

numbers = [1, 2, 3, 4, 3, 2, 1, 5, 6, 6]
# Convert the list to a set to remove duplicates
unique_numbers = _____
print(unique_numbers)
--------------------------------------------------

2.2. Check for Common Elements Between Two Sets
You are given two sets. Write code to find the common elements (intersection) between them and print the result.

set1 = {1, 2, 3, 4}
set2 = {3, 4, 5, 6}
# Find the common elements between the two sets
common_elements = _____
print(common_elements)
--------------------------------------------------

2.3. Set Union
You are given two sets of colors. Use a set operation to create a new set that contains all unique colors from both sets (union), and print the result.

set1 = {"red", "blue", "green"}
set2 = {"yellow", "blue", "orange"}
# Find the union of the two sets
all_colors = _____
print(all_colors)
--------------------------------------------------

2.4. Find the Difference Between Two Sets
You are given two sets of numbers. Write code to find the elements that are in the first set but not in the second (difference), and print the result.

set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 60, 70}
# Find the difference between the two sets (elements in set1 but not in set2)
difference = _____
print(difference)
--------------------------------------------------

2.5. Check if a Set is a Subset of Another Set
You are given two sets. Write a Python program to check if the first set is a subset of the second and print the result.

set1 = {1, 2, 3}
set2 = {1, 2, 3, 4, 5}
# Check if set1 is a subset of set2
is_subset = _____
print(is_subset)
--------------------------------------------------
--------------------------------------------------

Lambda
3.1. Square of Numbers
Write a lambda function that takes a number as input and returns its square. Then, use this lambda function in a map() to square each element in a list of numbers.

numbers = [1, 2, 3, 4, 5]
# Create a lambda function to square numbers
squared_numbers = list(map(_____, numbers))
print(squared_numbers)
--------------------------------------------------

3.2. Filter Even Numbers
Write a lambda function that checks if a number is even, then use it in a filter() to filter out all the even numbers from a list.

numbers = [10, 15, 21, 30, 44, 53]
# Create a lambda function to filter even numbers
even_numbers = list(filter(_____, numbers))
print(even_numbers)
--------------------------------------------------

3.3. Multiplication of Two Numbers
Create a lambda function that takes two numbers as inputs and returns their product. Then, use the lambda function to multiply pairs of numbers from two separate lists.
list1 = [1, 2, 3, 4]
list2 = [10, 20, 30, 40]
# Create a lambda function to multiply two numbers
products = list(map(_____, list1, list2))
print(products)
--------------------------------------------------

3.4. Combine First and Last Name
You are given two lists: one with first names and one with last names. Write a lambda function that takes two strings (first and last names) and combines them into a full name, then use it with map().
first_names = ["John", "Jane", "Emily"]
last_names = ["Doe", "Smith", "Blunt"]
# Create a lambda function to combine first and last names
full_names = list(map(_____, first_names, last_names))
print(full_names)

--------------------------------------------------

3.5. Sorting a List of Tuples
You have a list of tuples where each tuple contains a name and an age. Use a lambda function to sort this list by age in ascending order.

people = [("Alice", 30), ("Bob", 25), ("Charlie", 35)]
# Create a lambda function to sort by age
sorted_people = sorted(people, key=_____)
print(sorted_people)
--------------------------------------------------